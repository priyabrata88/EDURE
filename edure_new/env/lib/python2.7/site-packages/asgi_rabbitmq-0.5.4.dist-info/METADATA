Metadata-Version: 2.0
Name: asgi-rabbitmq
Version: 0.5.4
Summary: RabbitMQ backend for ASGI
Home-page: https://github.com/proofit404/asgi_rabbitmq
Author: Artem Malyshev
Author-email: proofit404@gmail.com
License: BSD
Description-Content-Type: UNKNOWN
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Topic :: Software Development
Requires-Dist: pika (==0.11.0)
Requires-Dist: asgiref (>=1.0.0)
Requires-Dist: msgpack-python
Requires-Dist: cached-property
Requires-Dist: futures; python_version < "3.0"
Provides-Extra: tests
Requires-Dist: rabbitmq-admin (>=0.2); extra == 'tests'

.. |travis| image:: https://img.shields.io/travis/proofit404/asgi_rabbitmq.svg?style=flat-square
    :target: https://travis-ci.org/proofit404/asgi_rabbitmq
    :alt: Build Status

.. |codecov| image:: https://img.shields.io/codecov/c/github/codecov/example-python.svg?style=flat-square
    :target: https://codecov.io/gh/proofit404/asgi_rabbitmq
    :alt: Coverage Status

=============
asgi_rabbitmq
=============

|travis| |codecov|

RabbitMQ backend for ASGI.

ASGI is a standard interface between network protocol servers
(particularly web servers) and Python applications (Django Channels),
intended to allow handling of multiple common protocol styles
(including HTTP, HTTP2, and WebSocket).

Channels loads into Django as a pluggable app to bring WebSocket,
long-poll HTTP, task offloading and other asynchrony support to your
code, using familiar Django design patterns and a flexible underlying
framework that lets you not only customize behaviours but also write
support for your own protocols and needs.

- `Source Code`_
- `Issue Tracker`_
- `Documentation`_

.. figure:: docs/img/infrastructure.png

Installation
------------

You can install the most recent available version from PyPI::

    pip install asgi_rabbitmq

Usage
-----

To use RabbitMQ broker as your channels layer add following lines to
your django settings

.. code:: python

    CHANNEL_LAYERS = {
        'default': {
            'BACKEND': 'asgi_rabbitmq.RabbitmqChannelLayer',
            # Change according to your project layout:
            'ROUTING': 'myproject.routing.routes',
            'CONFIG': {
                'url': 'amqp://guest:guest@rabbitmq:5672/%2F',
            },
        },
    }

Now you can use channels project as usual::

    daphne myproject.asgi:channel_layer
    django-admin runworker

License
-------

ASGI RabbitMQ layer is offered under 3-terms BSD license.

.. _source code: https://github.com/proofit404/asgi_rabbitmq
.. _issue tracker: https://github.com/proofit404/asgi_rabbitmq/issues
.. _documentation: http://asgi-rabbitmq.readthedocs.io/en/latest/

.. :changelog:

Changelog
---------

0.5.4 (2017-10-22)
++++++++++++++++++

- Upgrade `pika` library to the `0.11`.  Fix some framing errors.

0.5.3 (2017-08-08)
++++++++++++++++++

- Drop group membership marker on continuous `group_add` calls.
- Fix send to the empty group.

0.5.2 (2017-06-07)
++++++++++++++++++

- Don't try to start connection thread twice.

0.5.1 (2017-06-06)
++++++++++++++++++

- Fix ``AttributeError`` on Thread access.  Issue `#6`_.

0.5 (2017-05-28)
++++++++++++++++

- Resource cleanup.
- Start connection on first network operation call.

0.4.1 (2017-04-15)
++++++++++++++++++

- Add ``__version__`` variable to pass channels package compatibility
  test.

0.4 (2017-04-15)
++++++++++++++++

- New style process local channels support.  This version is
  compatible with ASGI reference >= 1.1
- Declared queues cache was introduced.  Channels worker bootstrap
  hook was removed.
- Python 3.6 and Django 1.11 compatibility.
- Connection and AMQP channels level errors are propagated to the
  caller thread.
- ``TEST_CONFIG`` support for test case mixin.

0.3 (2017-03-28)
++++++++++++++++

- Add ``RabbitmqLocalChannelLayer`` to use RabbitMQ layer together
  with IPC.
- Add ``RabbitmqLayerTestCaseMixin`` to use with Channels live server
  test case.
- Improved thread locking mechanism.
- Cryptography support.
- Layer ``channel_capacity`` option support.

0.2 (2017-01-29)
++++++++++++++++

- Significant speed improvement for layer receive method.

0.1 (2017-01-13)
++++++++++++++++

- Initial public release.

.. _#6: https://github.com/proofit404/asgi_rabbitmq/issues/6


